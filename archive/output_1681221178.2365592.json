{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 5}, "tests": {"0": {"status": "ERROR", "message": "@pytest.fixture\n    def browser():\n        options = Options()\n        options.add_argument('--ignore-certificate-errors')\n        options.add_argument('--ignore-ssl-errors')\n        options.add_experimental_option('excludeSwitches', ['enable-logging'])\n        # options.add_argument('--headless')\n    \n>       driver = webdriver.Chrome(\"/Users/naufalazhar/Documents/ChromeDriver/chromedriver\", options=options)\n\ntest_script.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:80: in __init__\n    super().__init__(\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:101: in __init__\n    self.service.start()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.service.Service object at 0x102d12ec0>\n\n    def start(self) -> None:\n        \"\"\"Starts the Service.\n    \n        :Exceptions:\n         - WebDriverException : Raised either when it can't start the service\n           or when it can't connect to the service\n        \"\"\"\n        try:\n            self._start_process(self.path)\n        except WebDriverException as err:\n            if \"executable needs to be in PATH\" in err.msg:\n                logger.debug(\"driver not found in PATH, trying Selenium Manager\")\n                browser = self.__class__.__module__.split(\".\")[-2]\n    \n                try:\n                    path = SeleniumManager().driver_location(browser)\n                except WebDriverException as new_err:\n                    logger.debug(\"Unable to obtain driver using Selenium Manager: \" + new_err.msg)\n                    raise err\n    \n                self._start_process(path)\n    \n        count = 0\n        while True:\n            self.assert_process_still_running()\n            if self.is_connectable():\n                break\n    \n            count += 1\n            sleep(0.5)\n            if count == 60:\n>               raise WebDriverException(f\"Can not connect to the Service {self.path}\")\nE               selenium.common.exceptions.WebDriverException: Message: Can not connect to the Service /Users/naufalazhar/Documents/ChromeDriver/chromedriver\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/common/service.py:111: WebDriverException\n", "test_name": "test_valid_login", "rerun": "0"}, "1": {"status": "ERROR", "message": "@pytest.fixture\n    def browser():\n        options = Options()\n        options.add_argument('--ignore-certificate-errors')\n        options.add_argument('--ignore-ssl-errors')\n        options.add_experimental_option('excludeSwitches', ['enable-logging'])\n        # options.add_argument('--headless')\n    \n>       driver = webdriver.Chrome(\"/Users/naufalazhar/Documents/ChromeDriver/chromedriver\", options=options)\n\ntest_script.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:80: in __init__\n    super().__init__(\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:101: in __init__\n    self.service.start()\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/common/service.py:104: in start\n    self.assert_process_still_running()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.service.Service object at 0x102dc2da0>\n\n    def assert_process_still_running(self) -> None:\n        \"\"\"Check if the underlying process is still running.\"\"\"\n        return_code = self.process.poll()\n        if return_code:\n>           raise WebDriverException(f\"Service {self.path} unexpectedly exited. Status code was: {return_code}\")\nE           selenium.common.exceptions.WebDriverException: Message: Service /Users/naufalazhar/Documents/ChromeDriver/chromedriver unexpectedly exited. Status code was: -9\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/common/service.py:117: WebDriverException\n", "test_name": "test_invalid_login", "rerun": "0"}, "2": {"status": "ERROR", "message": "@pytest.fixture\n    def browser():\n        options = Options()\n        options.add_argument('--ignore-certificate-errors')\n        options.add_argument('--ignore-ssl-errors')\n        options.add_experimental_option('excludeSwitches', ['enable-logging'])\n        # options.add_argument('--headless')\n    \n>       driver = webdriver.Chrome(\"/Users/naufalazhar/Documents/ChromeDriver/chromedriver\", options=options)\n\ntest_script.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:80: in __init__\n    super().__init__(\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:101: in __init__\n    self.service.start()\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/common/service.py:104: in start\n    self.assert_process_still_running()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.service.Service object at 0x102e37cd0>\n\n    def assert_process_still_running(self) -> None:\n        \"\"\"Check if the underlying process is still running.\"\"\"\n        return_code = self.process.poll()\n        if return_code:\n>           raise WebDriverException(f\"Service {self.path} unexpectedly exited. Status code was: {return_code}\")\nE           selenium.common.exceptions.WebDriverException: Message: Service /Users/naufalazhar/Documents/ChromeDriver/chromedriver unexpectedly exited. Status code was: -9\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/common/service.py:117: WebDriverException\n", "test_name": "test_logout", "rerun": "0"}, "3": {"status": "ERROR", "message": "@pytest.fixture\n    def browser():\n        options = Options()\n        options.add_argument('--ignore-certificate-errors')\n        options.add_argument('--ignore-ssl-errors')\n        options.add_experimental_option('excludeSwitches', ['enable-logging'])\n        # options.add_argument('--headless')\n    \n>       driver = webdriver.Chrome(\"/Users/naufalazhar/Documents/ChromeDriver/chromedriver\", options=options)\n\ntest_script.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:80: in __init__\n    super().__init__(\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:101: in __init__\n    self.service.start()\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/common/service.py:104: in start\n    self.assert_process_still_running()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.service.Service object at 0x102dd6860>\n\n    def assert_process_still_running(self) -> None:\n        \"\"\"Check if the underlying process is still running.\"\"\"\n        return_code = self.process.poll()\n        if return_code:\n>           raise WebDriverException(f\"Service {self.path} unexpectedly exited. Status code was: {return_code}\")\nE           selenium.common.exceptions.WebDriverException: Message: Service /Users/naufalazhar/Documents/ChromeDriver/chromedriver unexpectedly exited. Status code was: -9\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/common/service.py:117: WebDriverException\n", "test_name": "test_checkout", "rerun": "0"}, "4": {"status": "ERROR", "message": "@pytest.fixture\n    def browser():\n        options = Options()\n        options.add_argument('--ignore-certificate-errors')\n        options.add_argument('--ignore-ssl-errors')\n        options.add_experimental_option('excludeSwitches', ['enable-logging'])\n        # options.add_argument('--headless')\n    \n>       driver = webdriver.Chrome(\"/Users/naufalazhar/Documents/ChromeDriver/chromedriver\", options=options)\n\ntest_script.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:80: in __init__\n    super().__init__(\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:101: in __init__\n    self.service.start()\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/common/service.py:104: in start\n    self.assert_process_still_running()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.chrome.service.Service object at 0x102db5330>\n\n    def assert_process_still_running(self) -> None:\n        \"\"\"Check if the underlying process is still running.\"\"\"\n        return_code = self.process.poll()\n        if return_code:\n>           raise WebDriverException(f\"Service {self.path} unexpectedly exited. Status code was: {return_code}\")\nE           selenium.common.exceptions.WebDriverException: Message: Service /Users/naufalazhar/Documents/ChromeDriver/chromedriver unexpectedly exited. Status code was: -9\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/common/service.py:117: WebDriverException\n", "test_name": "test_invalid_checkout", "rerun": "0"}}, "suite_name": "test_script.py"}}}, "date": "April 11, 2023", "start_time": 1681221088.118829, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "5", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "5"}